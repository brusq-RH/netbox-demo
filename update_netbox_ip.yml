---

- name: Update Netbox IP, triggered by router IP config changes
  hosts: all
  gather_facts: false
  tasks:
    - include_vars: main.yml

    - name: Cleanup IPv4 addresses data on Netbox
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          assigned_object:
            device: "{{ item.value.assigned_object.device.name }}"
            name: "{{ item.value.assigned_object.name }}"
          family: "{{ item.value.family.value }}"
          address: "{{ item.value.address }}"
        state: absent
      loop: "{{ query('netbox.netbox.nb_lookup', 'ip-addresses',
                    api_endpoint=net_netbox_url,
                    token=net_netbox_token,
                    validate_certs=False) }}"
                    
    - name: Push IPv4 addresses data to Netbox
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          assigned_object:
            device: "{{ inventory_hostname }}"
            name: "{{ item.name }}"
          family: 4
          address: "{{ item.ipv4[0].address }}"
          description: "{{ item.ipv4[0].address }} description"
        state: present
      loop: "{{ _facts.ansible_facts.ansible_network_resources.l3_interfaces }}"
      when: item.ipv4 is defined and item.ipv4[0].address != ""
      throttle: 1

    # - name: Push VLANs data to Netbox
    #   netbox.netbox.netbox_vlan:
    #     netbox_url: "{{ net_netbox_url }}"
    #     netbox_token: "{{ net_netbox_token }}"
    #     validate_certs: no
    #     data: 
    #       site: "{{ site }}"
    #       name: "{{ item.name }}"
    #       vid: "{{ item.vlan_id }}"
    #     state: present
    #   loop: "{{ _facts.ansible_facts.ansible_network_resources.vlans }}"
    #   when: item is defined
    #   throttle: 1
