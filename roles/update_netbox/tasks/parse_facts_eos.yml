---

- name: EOS block
  block:
  - name: EOS facts
    arista.eos.eos_facts:
      gather_subset:
        - hardware
      gather_network_resources:
        - all
    register: _eos_facts
    become: true
  - debug:
      var: _eos_facts
      verbosity: 2
  - set_fact:
      _facts: "{{ _eos_facts }}"
  when: ansible_network_os == 'eos'
  tags: [facts, inventory]

- name: NETBOX block
  block:
  - name: make sure device type is configured
    netbox.netbox.netbox_device_type:
      netbox_url: "{{ net_netbox_url }}"
      netbox_token: "{{ net_netbox_token }}"
      validate_certs: no
      data: 
        model: "{{ _facts.ansible_facts.ansible_net_system | default('unknown') }}"
        manufacturer: "arista"
        slug: "{{ _facts.ansible_facts.ansible_net_system | default('unknown') }}"
    throttle: 1


- name: Create site within NetBox with only required information
  netbox.netbox.netbox_site:
    netbox_url: "{{ net_netbox_url }}"
    netbox_token: "{{ net_netbox_token }}"
    validate_certs: no
    data:
      name: "{{ net_site }}"
    state: present
  delegate_to: localhost
  throttle: 1
    
  - name: push device inventory data to netbox
    netbox.netbox.netbox_device:
      netbox_url: "{{ net_netbox_url }}"
      netbox_token: "{{ net_netbox_token }}"
      validate_certs: no
      data:
        name: "{{ inventory_hostname }}"
        site: "{{ net_site }}"
        serial: "{{ _facts.ansible_facts.ansible_net_serialnum | default(omit) }}"
        device_type: "{{ _facts.ansible_facts.ansible_net_system | default('unknown') }}"
        device_role: "{{ net_device_role }}"
        local_context_data: "{{ _facts.ansible_facts.ansible_network_resources }}"
        custom_fields: 
          device_model: "{{ _facts.ansible_facts.ansible_net_model | default('unknown') }}"
          device_version: "{{ _facts.ansible_facts.ansible_net_version | default('unknown') }}"
        comments: "added by Ansible"
  tags: netbox
